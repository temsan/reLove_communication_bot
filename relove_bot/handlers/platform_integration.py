import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from ..db.models import User, JourneyProgress
from ..keyboards.platform import get_platform_keyboard
from ..states.diagnostic_states import DiagnosticStates

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("platform"))
async def show_platform_info(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ø–æ—Å–µ—Ç–∏—Ç—å"""
    await message.answer(
        "üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É relove.ru! üåü\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n"
        "‚Ä¢ –ñ–∏–≤—ã–µ –ø–æ—Ç–æ–∫–∏ —Å –ù–∞—Ç–∞—à–µ–π\n"
        "‚Ä¢ –ì–ª—É–±–æ–∫–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n"
        "‚Ä¢ –°–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤\n"
        "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n"
        "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?",
        reply_markup=get_platform_keyboard()
    )
    await state.set_state(DiagnosticStates.waiting_for_platform_visit)

@router.callback_query(DiagnosticStates.waiting_for_platform_visit)
async def process_platform_visit(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É"""
    try:
        async with AsyncSession() as session:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await session.execute(
                select(User).where(User.telegram_id == callback.from_user.id)
            )
            user = user.scalar_one_or_none()
            if user:
                user.has_visited_platform = True
                await session.commit()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
            await callback.message.edit_text(
                "üéØ –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –≤–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É:\n\n"
                "https://relove.ru/join?ref={user_id}\n\n"
                "–¢–∞–º –≤–∞—Å –∂–¥—É—Ç:\n"
                "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø—Å–∏—Ö–æ—Ç–∏–ø–∞\n"
                "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é\n"
                "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º\n"
                "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∂–∏–≤—ã–º –ø–æ—Ç–æ–∫–∞–º\n\n"
                "–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –æ—Ç –ù–∞—Ç–∞—à–∏.",
                reply_markup=get_platform_keyboard(show_purchase=True)
            )
            await state.set_state(DiagnosticStates.waiting_for_purchase)
    except Exception as e:
        logger.error(f"Error processing platform visit: {e}")
        await callback.message.edit_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

@router.callback_query(DiagnosticStates.waiting_for_purchase)
async def process_flow_purchase(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø–æ–∫—É–ø–∫–µ –ø–æ—Ç–æ–∫–∞"""
    try:
        async with AsyncSession() as session:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await session.execute(
                select(User).where(User.telegram_id == callback.from_user.id)
            )
            user = user.scalar_one_or_none()
            if user:
                user.has_purchased_flow = True
                await session.commit()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ç–æ–∫–∞—Ö
            await callback.message.edit_text(
                "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ä–µ—à–µ–Ω–∏–µ–º –Ω–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é! üéâ\n\n"
                "–ù–∞—Ç–∞—à–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è –≤–∞—Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏:\n\n"
                "1. ¬´–ü—É—Ç—å –≥–µ—Ä–æ—è¬ª - –±–∞–∑–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
                "2. ¬´–†–∞–∑—Ä—É—à–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã¬ª - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –≥–ª—É–±–æ–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π\n"
                "3. ¬´–í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ¬ª - –∏–Ω—Ç–µ–Ω—Å–∏–≤ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ—Ç–æ–∫ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –∏ –ù–∞—Ç–∞—à–∞ –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å —á–µ—Ä–µ–∑ –≤—Å–µ —ç—Ç–∞–ø—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n"
                "–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –ø–æ—Ç–æ–∫–∞—Ö! üåü"
            )
            await state.clear()
    except Exception as e:
        logger.error(f"Error processing flow purchase: {e}")
        await callback.message.edit_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        ) 